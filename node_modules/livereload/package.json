{
  "name": "livereload",
  "description": "LiveReload server",
  "version": "0.3.6",
  "contributors": [
    {
      "name": "Brian P. Hogan",
      "email": "brianhogan@napcs.com"
    }
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/napcs/node-livereload/blob/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/napcs/node-livereload.git"
  },
  "bin": {
    "livereload": "./bin/livereload.js"
  },
  "main": "./lib/livereload.js",
  "dependencies": {
    "opts": ">= 1.2.0",
    "websocket.io": ">= 0.1.0"
  },
  "devDependencies": {
    "request": ">= 2.9.203",
    "should": ">= 0.6.3",
    "ws": ">= 0.4.20",
    "mocha": ">= 1.0.3",
    "coffee-script": ">= 1.8.0"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "readme": "node-livereload\n===============\n\nAn implementation of the LiveReload server in Node.js. It's an alternative to the graphical [http://livereload.com/](http://livereload.com/) application, which monitors files for changes and reloads your web browser.\n\n# Example Usage\n\nFirst, install the LiveReload browser plugins by visiting [http://help.livereload.com/kb/general-use/browser-extensions](http://help.livereload.com/kb/general-use/browser-extensions).\n\nTo use livereload from the command line:\n\n    $ npm install -g livereload\n    $ livereload [path]\n\n\nOr to use the api within a project:\n\n    $ npm install livereload\n\nThen, simply create a server and fire it up.\n\n    livereload = require('livereload');\n    server = livereload.createServer();\n    server.watch(__dirname + \"/public\");\n\nYou can also use this with a Connect server:\n\n    connect = require('connect');\n    connect.createServer(\n      connect.compiler({ src: __dirname + \"/public\", enable: ['less'] }),\n      connect.staticProvider(__dirname + \"/public\")\n    ).listen(3000);\n\n    livereload = require('livereload');\n    server = livereload.createServer({exts: ['less']});\n    server.watch(__dirname + \"/public\");\n\nUsing originalPath option:\n\n```js\n// server.js\nvar server = livereload.createServer({\n    originalPath: \"http://domain.com\"\n});\nserver.watch('/User/Workspace/test');\n```  \n\n`$ node server.js`  \n\n```html\n<!-- html -->\n<head>\n    <link rel=\"stylesheet\" href=\"http://domain.com/css/style.css\">\n</head>\n```  \n\nWhen `/User/Workspace/test/css/style.css` modified, the stylesheet will be reload.\n\n# Command-line Options\n\nThe commandline options are\n\n* `-p` or `--port` to specify the listening port\n* `-i` or `--interval` to specify the listening interval in milliseconds. Default is 1000.\n\nSpecify the path when using the options.\n\n~~~\n$ livereload . -i 200\n~~~\n\n\n# API Options\n\nThe `createServer()` method supports a few basic options, passed as a JavaScript object:\n\n* `https` is an optional object of options to be passed to [https.createServer](http://nodejs.org/api/https.html#https_https_createserver_options_requestlistener) (if not provided, `http.createServer` is used instead)\n* `port` is the listening port. It defaults to `35729` which is what the LiveReload extensions use currently.\n* `exts` is an array of extensions you want to observe. The default extensions are  `html`, `css`, `js`, `png`, `gif`, `jpg`,\n  `php`, `php5`, `py`, `rb`,  `erb`, and \"coffee.\"\n* `applyJSLive` tells LiveReload to reload JavaScript files in the background instead of reloading the page. The default for this is `false`.\n* `applyCSSLive` tells LiveReload to reload CSS files in the background instead of refreshing the page. The default for this is `true`.\n* `exclusions` lets you specify files to ignore. By default, this includes `.git/`, `.svn/`, and `.hg/`\n* `originalPath` Set URL you use for development, e.g 'http:/domain.com', then LiveReload will proxy this url to local path.  \n* `overrideURL` override the stylesheet href with your set.\n\n# Limitations\n\nRight now this is extremely simple. It relies on polling so there's a delay in refreshing the browser. It could be faster.\n\n# License\n\nCopyright (c) 2010-2014 Brian P. Hogan and Joshua Peek\n\nReleased under the MIT license. See `LICENSE` for details.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/napcs/node-livereload/issues"
  },
  "homepage": "https://github.com/napcs/node-livereload",
  "_id": "livereload@0.3.6",
  "_from": "livereload@"
}
